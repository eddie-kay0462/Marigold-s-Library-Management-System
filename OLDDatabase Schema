CREATE DATABASE LibraryManagement;
USE LibraryManagement;

-- Student Table
CREATE TABLE STUDENT (
    student_id INT PRIMARY KEY,
    first_name VARCHAR(20) NOT NULL,
	last_name VARCHAR(20) NOT NULL,
    grade VARCHAR(50) NOT NULL,
    contact_info VARCHAR(255) NOT NULL
);

-- Author Table
CREATE TABLE AUTHOR (
    author_id INT PRIMARY KEY AUTO_INCREMENT,
    first_name VARCHAR(20) NOT NULL,
	last_name VARCHAR(20) NOT NULL,
    bio TEXT
);

-- Book Table
CREATE TABLE BOOK (
    isbn VARCHAR(20) PRIMARY KEY,
    title VARCHAR(255) NOT NULL,
    author_id INT NOT NULL,
	acc_number INT NOT NULL,
    genre VARCHAR(100),
    publication_year INT,
    is_available BOOLEAN DEFAULT TRUE,
    FOREIGN KEY (author_id) REFERENCES AUTHOR(author_id) ON DELETE CASCADE
);

-- Librarian Table
CREATE TABLE LIBRARIAN (
    librarian_id INT PRIMARY KEY,
    first_name VARCHAR(20) NOT NULL,
	last_name VARCHAR(20) NOT NULL,
    contact_info VARCHAR(255) NOT NULL
);

-- Borrow Table
CREATE TABLE BORROW (
    borrow_id INT PRIMARY KEY AUTO_INCREMENT,
    student_id INT NOT NULL,
    book_id INT NOT NULL,
    borrow_date DATE NOT NULL,
    return_date DATE,
    due_date DATE NOT NULL,
    is_returned BOOLEAN DEFAULT FALSE,
    is_overdue BOOLEAN GENERATED ALWAYS AS (
        CASE 
            WHEN is_returned = FALSE AND due_date < CURDATE() THEN TRUE
            ELSE FALSE
        END
    ) STORED,
    FOREIGN KEY (student_id) REFERENCES STUDENT(student_id) ON DELETE CASCADE,
    FOREIGN KEY (book_id) REFERENCES BOOK(book_id) ON DELETE CASCADE
);
